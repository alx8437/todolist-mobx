[{"C:\\projects\\todolist-15\\src\\index.tsx":"1","C:\\projects\\todolist-15\\src\\reportWebVitals.ts":"2","C:\\projects\\todolist-15\\src\\app\\store.ts":"3","C:\\projects\\todolist-15\\src\\app\\App.tsx":"4","C:\\projects\\todolist-15\\src\\features\\TodolistsList\\tasks-reducer.ts":"5","C:\\projects\\todolist-15\\src\\features\\TodolistsList\\todolists-reducer.ts":"6","C:\\projects\\todolist-15\\src\\features\\TodolistsList\\TodolistsList.tsx":"7","C:\\projects\\todolist-15\\src\\api\\todolists-api.ts":"8","C:\\projects\\todolist-15\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx":"9","C:\\projects\\todolist-15\\src\\components\\AddItemForm\\AddItemForm.tsx":"10","C:\\projects\\todolist-15\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"11","C:\\projects\\todolist-15\\src\\components\\EditableSpan\\EditableSpan.tsx":"12","C:\\projects\\todolist-15\\src\\test-mobx\\TodolistTestMobx.tsx":"13","C:\\projects\\todolist-15\\src\\test-mobx\\todolistsStoreMobx.ts":"14"},{"size":643,"mtime":1611301434000,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":1607869388000,"results":"17","hashOfConfig":"16"},{"size":1033,"mtime":1596295538000,"results":"18","hashOfConfig":"16"},{"size":1003,"mtime":1614436094408,"results":"19","hashOfConfig":"16"},{"size":4593,"mtime":1614362368463,"results":"20","hashOfConfig":"16"},{"size":3210,"mtime":1611301808831,"results":"21","hashOfConfig":"16"},{"size":3733,"mtime":1614436094410,"results":"22","hashOfConfig":"16"},{"size":2582,"mtime":1614357834134,"results":"23","hashOfConfig":"16"},{"size":3838,"mtime":1614434620986,"results":"24","hashOfConfig":"16"},{"size":1474,"mtime":1594727720000,"results":"25","hashOfConfig":"16"},{"size":1773,"mtime":1596295538000,"results":"26","hashOfConfig":"16"},{"size":952,"mtime":1594154724000,"results":"27","hashOfConfig":"16"},{"size":1080,"mtime":1614435472775,"results":"28","hashOfConfig":"16"},{"size":2048,"mtime":1614436094412,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"19jkxkj",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\projects\\todolist-15\\src\\index.tsx",[],["62","63"],"C:\\projects\\todolist-15\\src\\reportWebVitals.ts",[],"C:\\projects\\todolist-15\\src\\app\\store.ts",[],"C:\\projects\\todolist-15\\src\\app\\App.tsx",["64","65","66","67","68","69","70","71"],"C:\\projects\\todolist-15\\src\\features\\TodolistsList\\tasks-reducer.ts",[],"C:\\projects\\todolist-15\\src\\features\\TodolistsList\\todolists-reducer.ts",[],"C:\\projects\\todolist-15\\src\\features\\TodolistsList\\TodolistsList.tsx",["72","73","74","75","76","77","78","79","80","81"],"C:\\projects\\todolist-15\\src\\api\\todolists-api.ts",[],"C:\\projects\\todolist-15\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx",["82","83","84","85","86","87"],"import React, {useCallback, useEffect} from 'react'\r\nimport {AddItemForm} from '../../../components/AddItemForm/AddItemForm'\r\nimport {EditableSpan} from '../../../components/EditableSpan/EditableSpan'\r\nimport {Button, IconButton} from '@material-ui/core'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {Task} from './Task/Task'\r\nimport {TaskStatuses, TaskType} from '../../../api/todolists-api'\r\nimport {FilterValuesType} from '../todolists-reducer'\r\nimport {useDispatch} from 'react-redux'\r\nimport {fetchTasksTC} from '../tasks-reducer'\r\n\r\ntype PropsType = {\r\n    id: string\r\n    title: string\r\n    tasks: Array<TaskType>\r\n    changeFilter: (value: FilterValuesType, todolistId: string) => void\r\n    addTask: (title: string, todolistId: string) => void\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n    removeTodolist: (id: string) => void\r\n    changeTodolistTitle: (id: string, newTitle: string) => void\r\n    filter: FilterValuesType\r\n\r\n}\r\n\r\nexport const Todolist = React.memo(function (props: PropsType) {\r\n    console.log('Todolist called')\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        const thunk = fetchTasksTC(props.id)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTask = useCallback((title: string) => {\r\n        props.addTask(title, props.id)\r\n    }, [props.addTask, props.id])\r\n\r\n    const removeTodolist = () => {\r\n        props.removeTodolist(props.id)\r\n    }\r\n    const changeTodolistTitle = useCallback((title: string) => {\r\n        props.changeTodolistTitle(props.id, title)\r\n    }, [props.id, props.changeTodolistTitle])\r\n\r\n    const onAllClickHandler = useCallback(() => props.changeFilter('all', props.id), [props.id, props.changeFilter])\r\n    const onActiveClickHandler = useCallback(() => props.changeFilter('active', props.id), [props.id, props.changeFilter])\r\n    const onCompletedClickHandler = useCallback(() => props.changeFilter('completed', props.id), [props.id, props.changeFilter])\r\n\r\n\r\n    let tasksForTodolist = props.tasks\r\n\r\n    if (props.filter === 'active') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.New)\r\n    }\r\n    if (props.filter === 'completed') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.Completed)\r\n    }\r\n\r\n    return <div>\r\n        <h3><EditableSpan value={props.title} onChange={changeTodolistTitle}/>\r\n            <IconButton onClick={removeTodolist}>\r\n                <Delete/>\r\n            </IconButton>\r\n        </h3>\r\n        <AddItemForm addItem={addTask}/>\r\n        <div>\r\n            {\r\n                tasksForTodolist.map(t => <Task key={t.id} task={t} todolistId={props.id}\r\n                                                removeTask={props.removeTask}\r\n                                                changeTaskTitle={props.changeTaskTitle}\r\n                                                changeTaskStatus={props.changeTaskStatus}\r\n                />)\r\n            }\r\n        </div>\r\n        <div style={{paddingTop: '10px'}}>\r\n            <Button variant={props.filter === 'all' ? 'outlined' : 'text'}\r\n                    onClick={onAllClickHandler}\r\n                    color={'default'}\r\n            >All\r\n            </Button>\r\n            <Button variant={props.filter === 'active' ? 'outlined' : 'text'}\r\n                    onClick={onActiveClickHandler}\r\n                    color={'primary'}>Active\r\n            </Button>\r\n            <Button variant={props.filter === 'completed' ? 'outlined' : 'text'}\r\n                    onClick={onCompletedClickHandler}\r\n                    color={'secondary'}>Completed\r\n            </Button>\r\n        </div>\r\n    </div>\r\n})\r\n\r\n\r\n","C:\\projects\\todolist-15\\src\\components\\AddItemForm\\AddItemForm.tsx",["88","89","90"],"import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport {Box, Button, FormControl, IconButton, TextField} from '@material-ui/core';\r\nimport {AddBox} from '@material-ui/icons';\r\n\r\ntype AddItemFormPropsType = {\r\n    addItem: (title: string) => void\r\n}\r\n\r\nexport const AddItemForm = React.memo(function(props: AddItemFormPropsType) {\r\n    console.log(\"AddItemForm called\")\r\n\r\n    let [title, setTitle] = useState(\"\")\r\n    let [error, setError] = useState<string | null>(null)\r\n\r\n    const addItem = () => {\r\n        if (title.trim() !== \"\") {\r\n            props.addItem(title);\r\n            setTitle(\"\");\r\n        } else {\r\n            setError(\"Title is required\");\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (error !== null) {\r\n            setError(null);\r\n        }\r\n        if (e.charCode === 13) {\r\n            addItem();\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <TextField variant=\"outlined\"\r\n                   error={!!error}\r\n                   value={title}\r\n                   onChange={onChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n                   label=\"Title\"\r\n                   helperText={error}\r\n        />\r\n        <IconButton color=\"primary\" onClick={addItem}>\r\n            <AddBox />\r\n        </IconButton>\r\n    </div>\r\n})\r\n","C:\\projects\\todolist-15\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["91","92","93"],"import React, {ChangeEvent, useCallback} from 'react'\r\nimport {Checkbox, IconButton} from '@material-ui/core'\r\nimport {EditableSpan} from '../../../../components/EditableSpan/EditableSpan'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {TaskStatuses, TaskType} from '../../../../api/todolists-api'\r\n\r\ntype TaskPropsType = {\r\n    task: TaskType\r\n    todolistId: string\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n}\r\nexport const Task = React.memo((props: TaskPropsType) => {\r\n    const onClickHandler = useCallback(() => props.removeTask(props.task.id, props.todolistId), [props.task.id, props.todolistId]);\r\n\r\n    const onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        props.changeTaskStatus(props.task.id, newIsDoneValue ? TaskStatuses.Completed : TaskStatuses.New, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    const onTitleChangeHandler = useCallback((newValue: string) => {\r\n        props.changeTaskTitle(props.task.id, newValue, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    return <div key={props.task.id} className={props.task.status === TaskStatuses.Completed ? 'is-done' : ''}>\r\n        <Checkbox\r\n            checked={props.task.status === TaskStatuses.Completed}\r\n            color=\"primary\"\r\n            onChange={onChangeHandler}\r\n        />\r\n\r\n        <EditableSpan value={props.task.title} onChange={onTitleChangeHandler}/>\r\n        <IconButton onClick={onClickHandler}>\r\n            <Delete/>\r\n        </IconButton>\r\n    </div>\r\n})\r\n","C:\\projects\\todolist-15\\src\\components\\EditableSpan\\EditableSpan.tsx",[],"C:\\projects\\todolist-15\\src\\test-mobx\\TodolistTestMobx.tsx",["94"],"C:\\projects\\todolist-15\\src\\test-mobx\\todolistsStoreMobx.ts",["95","96","97","98"],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":3,"column":9,"nodeType":"105","messageId":"106","endLine":3,"endColumn":15},{"ruleId":"103","severity":1,"message":"107","line":3,"column":17,"nodeType":"105","messageId":"106","endLine":3,"endColumn":23},{"ruleId":"103","severity":1,"message":"108","line":3,"column":25,"nodeType":"105","messageId":"106","endLine":3,"endColumn":34},{"ruleId":"103","severity":1,"message":"109","line":3,"column":36,"nodeType":"105","messageId":"106","endLine":3,"endColumn":46},{"ruleId":"103","severity":1,"message":"110","line":3,"column":48,"nodeType":"105","messageId":"106","endLine":3,"endColumn":55},{"ruleId":"103","severity":1,"message":"111","line":3,"column":57,"nodeType":"105","messageId":"106","endLine":3,"endColumn":67},{"ruleId":"103","severity":1,"message":"112","line":4,"column":9,"nodeType":"105","messageId":"106","endLine":4,"endColumn":13},{"ruleId":"103","severity":1,"message":"113","line":5,"column":9,"nodeType":"105","messageId":"106","endLine":5,"endColumn":22},{"ruleId":"103","severity":1,"message":"114","line":8,"column":5,"nodeType":"105","messageId":"106","endLine":8,"endColumn":21},{"ruleId":"103","severity":1,"message":"115","line":11,"column":5,"nodeType":"105","messageId":"106","endLine":11,"endColumn":23},{"ruleId":"116","severity":1,"message":"117","line":34,"column":8,"nodeType":"118","endLine":34,"endColumn":10,"suggestions":"119"},{"ruleId":"116","severity":1,"message":"120","line":39,"column":8,"nodeType":"118","endLine":39,"endColumn":10,"suggestions":"121"},{"ruleId":"116","severity":1,"message":"120","line":44,"column":8,"nodeType":"118","endLine":44,"endColumn":10,"suggestions":"122"},{"ruleId":"116","severity":1,"message":"120","line":49,"column":8,"nodeType":"118","endLine":49,"endColumn":10,"suggestions":"123"},{"ruleId":"116","severity":1,"message":"120","line":54,"column":8,"nodeType":"118","endLine":54,"endColumn":10,"suggestions":"124"},{"ruleId":"116","severity":1,"message":"120","line":59,"column":8,"nodeType":"118","endLine":59,"endColumn":10,"suggestions":"125"},{"ruleId":"116","severity":1,"message":"120","line":64,"column":8,"nodeType":"118","endLine":64,"endColumn":10,"suggestions":"126"},{"ruleId":"116","severity":1,"message":"120","line":69,"column":8,"nodeType":"118","endLine":69,"endColumn":10,"suggestions":"127"},{"ruleId":"116","severity":1,"message":"128","line":34,"column":8,"nodeType":"118","endLine":34,"endColumn":10,"suggestions":"129"},{"ruleId":"116","severity":1,"message":"130","line":38,"column":8,"nodeType":"118","endLine":38,"endColumn":33,"suggestions":"131"},{"ruleId":"116","severity":1,"message":"130","line":45,"column":8,"nodeType":"118","endLine":45,"endColumn":45,"suggestions":"132"},{"ruleId":"116","severity":1,"message":"130","line":47,"column":86,"nodeType":"118","endLine":47,"endColumn":116,"suggestions":"133"},{"ruleId":"116","severity":1,"message":"130","line":48,"column":92,"nodeType":"118","endLine":48,"endColumn":122,"suggestions":"134"},{"ruleId":"116","severity":1,"message":"130","line":49,"column":98,"nodeType":"118","endLine":49,"endColumn":128,"suggestions":"135"},{"ruleId":"103","severity":1,"message":"136","line":2,"column":9,"nodeType":"105","messageId":"106","endLine":2,"endColumn":12},{"ruleId":"103","severity":1,"message":"107","line":2,"column":14,"nodeType":"105","messageId":"106","endLine":2,"endColumn":20},{"ruleId":"103","severity":1,"message":"137","line":2,"column":22,"nodeType":"105","messageId":"106","endLine":2,"endColumn":33},{"ruleId":"116","severity":1,"message":"130","line":15,"column":97,"nodeType":"118","endLine":15,"endColumn":130,"suggestions":"138"},{"ruleId":"116","severity":1,"message":"130","line":20,"column":8,"nodeType":"118","endLine":20,"endColumn":41,"suggestions":"139"},{"ruleId":"116","severity":1,"message":"130","line":24,"column":8,"nodeType":"118","endLine":24,"endColumn":41,"suggestions":"140"},{"ruleId":"103","severity":1,"message":"141","line":1,"column":16,"nodeType":"105","messageId":"106","endLine":1,"endColumn":25},{"ruleId":"103","severity":1,"message":"142","line":2,"column":9,"nodeType":"105","messageId":"106","endLine":2,"endColumn":15},{"ruleId":"103","severity":1,"message":"143","line":2,"column":17,"nodeType":"105","messageId":"106","endLine":2,"endColumn":21},{"ruleId":"103","severity":1,"message":"144","line":2,"column":43,"nodeType":"105","messageId":"106","endLine":2,"endColumn":57},{"ruleId":"103","severity":1,"message":"145","line":2,"column":59,"nodeType":"105","messageId":"106","endLine":2,"endColumn":69},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"@typescript-eslint/no-unused-vars","'AppBar' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Container' is defined but never used.","'IconButton' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'Menu' is defined but never used.","'TodolistsList' is defined but never used.","'fetchTodolistsTC' is defined but never used.","'TodolistDomainType' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'todolists'. Either include them or remove the dependency array.","ArrayExpression",["148"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["149"],["150"],["151"],["152"],["153"],["154"],["155"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.id'. Either include them or remove the dependency array.",["156"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["157"],["158"],["159"],["160"],["161"],"'Box' is defined but never used.","'FormControl' is defined but never used.",["162"],["163"],["164"],"'useEffect' is defined but never used.","'action' is defined but never used.","'flow' is defined but never used.","'makeObservable' is defined but never used.","'observable' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"167","fix":"169"},{"desc":"167","fix":"170"},{"desc":"167","fix":"171"},{"desc":"167","fix":"172"},{"desc":"167","fix":"173"},{"desc":"167","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"177","fix":"179"},{"desc":"177","fix":"180"},{"desc":"177","fix":"181"},{"desc":"177","fix":"182"},{"desc":"177","fix":"183"},{"desc":"177","fix":"184"},{"desc":"177","fix":"185"},"Update the dependencies array to be: [dispatch, todolists]",{"range":"186","text":"187"},"Update the dependencies array to be: [dispatch]",{"range":"188","text":"189"},{"range":"190","text":"189"},{"range":"191","text":"189"},{"range":"192","text":"189"},{"range":"193","text":"189"},{"range":"194","text":"189"},{"range":"195","text":"189"},"Update the dependencies array to be: [dispatch, props.id]",{"range":"196","text":"197"},"Update the dependencies array to be: [props]",{"range":"198","text":"199"},{"range":"200","text":"199"},{"range":"201","text":"199"},{"range":"202","text":"199"},{"range":"203","text":"199"},{"range":"204","text":"199"},{"range":"205","text":"199"},{"range":"206","text":"199"},[1279,1281],"[dispatch, todolists]",[1450,1452],"[dispatch]",[1621,1623],[1826,1828],[2039,2041],[2240,2242],[2387,2389],[2566,2568],[1377,1379],"[dispatch, props.id]",[1485,1510],"[props]",[1723,1760],[1850,1880],[1974,2004],[2104,2134],[765,798],[1071,1104],[1261,1294]]